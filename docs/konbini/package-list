$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:cc.ekblad.konbini////PointingToDeclaration/konbini/cc.ekblad.konbini/index.html
$dokka.location:cc.ekblad.konbini//atomically/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/atomically.html
$dokka.location:cc.ekblad.konbini//atomically/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/atomically.html
$dokka.location:cc.ekblad.konbini//boolean/#/PointingToDeclaration/konbini/cc.ekblad.konbini/boolean.html
$dokka.location:cc.ekblad.konbini//bracket/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/bracket.html
$dokka.location:cc.ekblad.konbini//bracket/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/bracket.html
$dokka.location:cc.ekblad.konbini//chain/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chain.html
$dokka.location:cc.ekblad.konbini//chain/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chain.html
$dokka.location:cc.ekblad.konbini//chain1/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chain1.html
$dokka.location:cc.ekblad.konbini//chain1/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chain1.html
$dokka.location:cc.ekblad.konbini//chainl/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chainl.html
$dokka.location:cc.ekblad.konbini//chainl/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chainl.html
$dokka.location:cc.ekblad.konbini//chainr/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chainr.html
$dokka.location:cc.ekblad.konbini//chainr/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/chainr.html
$dokka.location:cc.ekblad.konbini//char/#/PointingToDeclaration/konbini/cc.ekblad.konbini/char.html
$dokka.location:cc.ekblad.konbini//char/#kotlin.CharArray/PointingToDeclaration/konbini/cc.ekblad.konbini/char.html
$dokka.location:cc.ekblad.konbini//char/cc.ekblad.konbini.ParserState#kotlin.CharArray/PointingToDeclaration/konbini/cc.ekblad.konbini/char.html
$dokka.location:cc.ekblad.konbini//decimal/#/PointingToDeclaration/konbini/cc.ekblad.konbini/decimal.html
$dokka.location:cc.ekblad.konbini//doubleQuotedString/#/PointingToDeclaration/konbini/cc.ekblad.konbini/double-quoted-string.html
$dokka.location:cc.ekblad.konbini//fail/#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/fail.html
$dokka.location:cc.ekblad.konbini//failsWith/kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/fails-with.html
$dokka.location:cc.ekblad.konbini//integer/#/PointingToDeclaration/konbini/cc.ekblad.konbini/integer.html
$dokka.location:cc.ekblad.konbini//many/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/many.html
$dokka.location:cc.ekblad.konbini//many/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/many.html
$dokka.location:cc.ekblad.konbini//many1/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/many1.html
$dokka.location:cc.ekblad.konbini//many1/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/many1.html
$dokka.location:cc.ekblad.konbini//map/kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/map.html
$dokka.location:cc.ekblad.konbini//oneOf/#kotlin.Array[kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/konbini/cc.ekblad.konbini/one-of.html
$dokka.location:cc.ekblad.konbini//oneOf/#kotlin.Array[kotlin.Pair[kotlin.String,kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]]]/PointingToDeclaration/konbini/cc.ekblad.konbini/one-of.html
$dokka.location:cc.ekblad.konbini//oneOf/cc.ekblad.konbini.ParserState#kotlin.Array[kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/konbini/cc.ekblad.konbini/one-of.html
$dokka.location:cc.ekblad.konbini//oneOf/cc.ekblad.konbini.ParserState#kotlin.Array[kotlin.Pair[kotlin.String,kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]]]/PointingToDeclaration/konbini/cc.ekblad.konbini/one-of.html
$dokka.location:cc.ekblad.konbini//parse/kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.String#kotlin.Boolean/PointingToDeclaration/konbini/cc.ekblad.konbini/parse.html
$dokka.location:cc.ekblad.konbini//parseToEnd/kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.String#kotlin.Boolean/PointingToDeclaration/konbini/cc.ekblad.konbini/parse-to-end.html
$dokka.location:cc.ekblad.konbini//parser/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/parser.html
$dokka.location:cc.ekblad.konbini//regex/#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/regex.html
$dokka.location:cc.ekblad.konbini//regex/#kotlin.text.Regex/PointingToDeclaration/konbini/cc.ekblad.konbini/regex.html
$dokka.location:cc.ekblad.konbini//regex/cc.ekblad.konbini.ParserState#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/regex.html
$dokka.location:cc.ekblad.konbini//singleQuotedString/#/PointingToDeclaration/konbini/cc.ekblad.konbini/single-quoted-string.html
$dokka.location:cc.ekblad.konbini//string/#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/string.html
$dokka.location:cc.ekblad.konbini//then/kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/then.html
$dokka.location:cc.ekblad.konbini//tryParse/#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/try-parse.html
$dokka.location:cc.ekblad.konbini//tryParse/cc.ekblad.konbini.ParserState#kotlin.Function1[cc.ekblad.konbini.ParserState,TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/try-parse.html
$dokka.location:cc.ekblad.konbini//whitespace/#/PointingToDeclaration/konbini/cc.ekblad.konbini/whitespace.html
$dokka.location:cc.ekblad.konbini//whitespace1/#/PointingToDeclaration/konbini/cc.ekblad.konbini/whitespace1.html
$dokka.location:cc.ekblad.konbini/Chain.Companion///PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/-companion/index.html
$dokka.location:cc.ekblad.konbini/Chain.Companion/empty/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/-companion/empty.html
$dokka.location:cc.ekblad.konbini/Chain///PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/index.html
$dokka.location:cc.ekblad.konbini/Chain/Chain/#kotlin.collections.List[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.List[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/-chain.html
$dokka.location:cc.ekblad.konbini/Chain/separators/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/separators.html
$dokka.location:cc.ekblad.konbini/Chain/terms/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-chain/terms.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error///PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/index.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error/Error/#kotlin.String#kotlin.Int#kotlin.Int#kotlin.Int/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/-error.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error/column/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/column.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error/line/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/line.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error/position/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/position.html
$dokka.location:cc.ekblad.konbini/ParserResult.Error/reason/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-error/reason.html
$dokka.location:cc.ekblad.konbini/ParserResult.Ok///PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-ok/index.html
$dokka.location:cc.ekblad.konbini/ParserResult.Ok/Ok/#TypeParam(bounds=[kotlin.Any?])#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-ok/-ok.html
$dokka.location:cc.ekblad.konbini/ParserResult.Ok/remainingInput/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-ok/remaining-input.html
$dokka.location:cc.ekblad.konbini/ParserResult.Ok/result/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/-ok/result.html
$dokka.location:cc.ekblad.konbini/ParserResult///PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-result/index.html
$dokka.location:cc.ekblad.konbini/ParserState///PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/index.html
$dokka.location:cc.ekblad.konbini/ParserState/ParserState/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/-parser-state.html
$dokka.location:cc.ekblad.konbini/ParserState/char/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/char.html
$dokka.location:cc.ekblad.konbini/ParserState/eof/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/--eof--.html
$dokka.location:cc.ekblad.konbini/ParserState/fail/#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/fail.html
$dokka.location:cc.ekblad.konbini/ParserState/input/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/input.html
$dokka.location:cc.ekblad.konbini/ParserState/next/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/next.html
$dokka.location:cc.ekblad.konbini/ParserState/position/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/position.html
$dokka.location:cc.ekblad.konbini/ParserState/propagateLastFailure/#kotlin.String?/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/propagate-last-failure.html
$dokka.location:cc.ekblad.konbini/ParserState/regex/#kotlin.text.Regex/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/regex.html
$dokka.location:cc.ekblad.konbini/ParserState/rest/#/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/rest.html
$dokka.location:cc.ekblad.konbini/ParserState/string/#kotlin.String/PointingToDeclaration/konbini/cc.ekblad.konbini/-parser-state/string.html
cc.ekblad.konbini

